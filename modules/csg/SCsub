#!/usr/bin/env python

Import("env")
Import("env_modules")

env_csg = env_modules.Clone()

# Thirdparty source files

thirdparty_obj = []

thirdparty_dir = "#thirdparty/manifold/"
thirdparty_sources = [
    "src/polygon/src/polygon.cpp",
    "src/manifold/src/constructors.cpp",
    "src/manifold/src/edge_op.cpp",
    "src/manifold/src/face_op.cpp",
    "src/manifold/src/impl.cpp",
    "src/manifold/src/boolean_result.cpp",
    "src/manifold/src/boolean3.cpp",
    "src/manifold/src/manifold.cpp",
    "src/manifold/src/properties.cpp",
    "src/manifold/src/smoothing.cpp",
    "src/manifold/src/sort.cpp",
    "src/manifold/src/csg_tree.cpp",
    "src/collider/src/collider.cpp",
    "src/cross_section/src/cross_section.cpp",
    "src/polygon/src/polygon.cpp",
    "src/utilities/src/detect_cuda.cpp",
    "src/third_party/graphlite/src/connected_components.cpp",
]

env_csg.Prepend(CPPPATH=["#thirdparty/glm"])
env_csg.Prepend(CPPPATH=["#thirdparty/thrust"])
env_csg.Append(CPPDEFINES=["THRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_CPP"])
env_csg.Append(LINKFLAGS=["-fno-exceptions"])
env_csg.Append(LINKFLAGS=["-fno-duplicated-branches"])
thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]
thirdparty_sources = thirdparty_sources + [
    "#thirdparty/clipper2/CPP/Clipper2Lib/src/clipper.engine.cpp",
    "#thirdparty/clipper2/CPP/Clipper2Lib/src/clipper.offset.cpp",
    "#thirdparty/clipper2/CPP/Clipper2Lib/src/clipper.rectclip.cpp",
] + ["#thirdparty/quickhull/QuickHull.cpp"]
env_csg.Prepend(
    CPPPATH=[
        "#thirdparty/clipper2/CPP/Clipper2Lib/include",
        "#thirdparty/manifold/src/cross_section/include",
        "#thirdparty/manifold/src/manifold/include",
        "#thirdparty/quickhull",
        "#thirdparty/manifold/src/utilities/include"
        "#thirdparty/manifold/src/manifold/include",
        "#thirdparty/manifold/src/polygon/include",
        "#thirdparty/manifold/src/utilities/include",
        "#thirdparty/manifold/src/collider/include",
        "#thirdparty/manifold/src/third_party",
        "#thirdparty/manifold/src/third_party/graphlite/include",
        "#thirdparty/manifold/src/third_party/thrust",
        "#thirdparty/manifold/src/third_party/glm",
        "#thirdparty/manifold/third_party/thrust",
        "#thirdparty/manifold/src/third_party/clipper2/CPP/Clipper2Lib/include",
    ]
)
env_thirdparty = env_csg.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
env.modules_sources += thirdparty_obj

# Godot's own source files
env_csg.add_source_files(env.modules_sources, "*.cpp")
if env.editor_build:
    env_csg.add_source_files(env.modules_sources, "editor/*.cpp")
